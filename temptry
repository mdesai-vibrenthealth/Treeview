<!DOCTYPE html>
<html>
<head>
 
<style>html { font-size: 10px; font-family: Arial, Helvetica, sans-serif; }
::-webkit-scrollbar {
    width: 5px;
	height:5px;
}
/* Track */
::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3); 
    -webkit-border-radius: 10px;
    border-radius: 10px;
}
 
/* Handle */
::-webkit-scrollbar-thumb {
    -webkit-border-radius: 10px;
    border-radius: 10px;
    background: rgba(0,0,0,0.8); 
    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5); 
}
::-webkit-scrollbar-thumb:window-inactive {
	background: rgba(0,0,0,0.4); 
}


body {font-family: Arial, Helvetica, sans-serif;}

/* The Modal (background) */
.modal {
  display: none; /* Hidden by default */
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  padding-top: 100px; /* Location of the box */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  overflow: auto; /* Enable scroll if needed */
  background-color: rgb(0,0,0); /* Fallback color */
  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

/* Modal Content */
.modal-content {
  background-color: #fefefe;
  margin: auto;
  padding: 20px;
  border: 1px solid #888;
  width: 80%;
}

/* The Close Button */
.close {
  color: #aaaaaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: #000;
  text-decoration: none;
  cursor: pointer;
}

span.k-in > span.highlight {
    background:orange
}
</style>
    <title></title>
    <link rel="stylesheet" href="kendo.default-v2.min.css" />

    <script src="jquery-1.12.3.min.js"></script>
    
    
    <script src="kendo.all.min.js"></script>
    

<link rel="stylesheet" href="kendo.common.min.css">

<link rel="stylesheet" href="kendo.default.min.css">

<script src="angular.min.js"></script>
<script src="jszip.min.js"></script>
 <script src="tableau.extensions.1.latest.js" type="text/javascript"></script>

</head>
<body>
<h2>Modal Example</h2>

<!-- Trigger/Open The Modal -->
<button id="myBtn">Open Modal</button>

<!-- The Modal -->
<div id="myModal" class="modal">

  <!-- Modal content -->
  <div class="modal-content">
    <span class="close">&times;</span>
    <p>Some text in the Modal..</p>
  </div>

</div>
<br><input id="search-term" type="text" placeholder="Type to search" />
<div id="example">

    <div class="demo-section k-content">
        <div>
            <div id="treeview" style="font-size:10px;"></div>
        </div>
        
    </div>

<br>
<button id="btn1" class="button4" type="button" onClick="onCheck();">Apply</button>


</div>
</body>
 <script>
 
 ////////
 // Get the modal
var modal = document.getElementById("myModal");

// Get the button that opens the modal
var btn = document.getElementById("myBtn");

// Get the <span> element that closes the modal
var span = document.getElementsByClassName("close")[0];

// When the user clicks the button, open the modal 
btn.onclick = function() {
  modal.style.display = "block";
}

// When the user clicks on <span> (x), close the modal
span.onclick = function() {
  modal.style.display = "none";
}

// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
  if (event.target == modal) {
    modal.style.display = "none";
  }
}
///////////
 
 
 
 var data =  [{
                        id:-1, text: "California Precision Medicine Consortium", items: [
                            { 
								id: -1.1, text: "University of California Irvine School of Medicine", items: [
									{ id: 4, text: "University of California, Irvine (UCIMC)"},
									{ id: 5, text: "University of California, Irvine (Santa Ana)"},
									{ id: 6, text: "University of California, Irvine (Herbert Eye Institute)"},
									{ id: 7, text: "University of California, Irvine (Gottschalk Plaza Clinic)"},
									{ id: 8, text: "University of California, Irvine  (Anaheim)"}
									]
							},
							{ 
								id: -1.2, text: "University of California, Davis",items: [
									{ id: 9, text: "University of California Davis"}
									
									]
							}                          
                        ]
						
                    },
					{
					id: -2, text: "Arizona", items: [
                            { 
								id: -2.1, text: "Org2",  items: [
									{ id: 4, text: "Site7"},
									{ id: 5, text: "Site8"},
									{ id: 6, text: "University of California Davis"}
									]
							}                          
                        ]
                    }
				];
				
	//data = '[' + data +']';
 $("#treeview").kendoTreeView({
            checkboxes: {
                checkChildren: true
            },

    

            dataSource: [{
                id: 0, text: "All HPO", expanded: true, checked: true, items: data
            }]
        });

        // function that gathers IDs of checked nodes
        function checkedNodeIds(nodes, checkedNodes) {
            for (var i = 0; i < nodes.length; i++) {
                if (nodes[i].checked) {
					if(nodes[i].id >0)
					{
                    checkedNodes.push(nodes[i].text);
					}
                }

                if (nodes[i].hasChildren) {
                    checkedNodeIds(nodes[i].children.view(), checkedNodes);
                }
            }
        }

        // show checked node IDs on datasource change
        function onCheck() {
            var checkedNodes = [],
                treeView = $("#treeview").data("kendoTreeView"),
                message;

            checkedNodeIds(treeView.dataSource.view(), checkedNodes);

            if (checkedNodes.length > 0) {
                message = checkedNodes.join(",");
            } else {
                message = "No nodes checked.";
            }
		//	$("#result").html(message);
			filtering(checkedNodes);
            
		
        }
		
		function filtering(message)
{//alert("2");alert(message);
const dashboard = tableau.extensions.dashboardContent.dashboard;
		
		//following line can be used for static sheet sleection. let selectedWorksheet = dashboard.worksheets.find(w => w.name === 'datetrial');
		dashboard.worksheets.forEach(function (worksheet) {
		let selectedWorksheet = dashboard.worksheets.find(w => w.name === worksheet.name);
		updateFilter(message,selectedWorksheet);	 
		});
}
function updateFilter(message,worksheet)
{//alert("3");
let filterFetchPromises = [];


//alert(message.isArray([]));
		let dashboardfilters = [];//alert("5");
		filterFetchPromises.push(worksheet.getFiltersAsync());
		  Promise.all(filterFetchPromises).then(function (fetchResults) {
      			fetchResults.forEach(function (filtersForWorksheet) {
        			filtersForWorksheet.forEach(function (filter) {
					//alert(message[1]);
					worksheet.applyFilterAsync("Site Name", [ message[0]],"replace");
					//var v = "\""+ message[0] + "\"";
					for (i=1;i<message.length;i++)
					{
         				//var v = v + message[i];
						 worksheet.applyFilterAsync("Site Name", [message[i]], "add");
					}
					//alert(v);
						 //dashboardfilters.push(filter);
       			 	});
      		  	});
    
  		  });

}
//fitering


$('#search-term').on('keyup', function () {
$('#treeview' + ' li.k-item').show();
    $('span.k-in > span.highlight').each(function () {
        $(this).parent().text($(this).parent().text());
    });

    // ignore if no search term
    if ($.trim($(this).val()) == '') {var i=0;
     		$('#treeview .k-group').each(function () {
                    $('#treeview').data('kendoTreeView').collapse($(this));
					i++;
            });
				
        // alert(i);
		 return;
    }

    var term = this.value.toUpperCase();
    var tlen = term.length;

    $('#treeview span.k-in').each(function (index) {
        var text = $(this).text();
        var html = '';
        var q = 0;
        while ((p = text.toUpperCase().indexOf(term, q)) >= 0) {
            html += text.substring(q, p) + '<span class="highlight">' + text.substr(p, tlen) + '</span>';
            q = p + tlen;
        }

        if (q > 0) {
            html += text.substring(q);
            $(this).html(html);

            $(this).parentsUntil('.k-treeview').filter('.k-item').each(

            function (index, element) {
                ($('#treeview').data('kendoTreeView')).expand($(this));
                $(this).data('search-term', term);
            });
        }
    });
  $('#treeview .k-item').each(function () {
        if ($(this).data('search-term') != term) {
            $('#treeview').data('kendoTreeView').collapse($(this));
        }
		
    });
		$('#treeview' + ' li.k-item:not(:has(".highlight"))').hide();

       // $('#treeview' + ' li.k-item').expand(".k-item");
		
   
//	$("#treeview span.k-group span.k-group span.k-in").closest("li").hide();
});

(function () {
	$(document).ready(function () {//alert("1");
			// Added new code here to point to the configure function.
			tableau.extensions.initializeAsync().then(function () {
			
			//filtering();
	}, function () { console.log('Error while Initializing: ' + err.toString()); });
		});




	
		
		})();
</script>
</html>
